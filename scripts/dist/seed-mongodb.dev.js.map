{"version":3,"sources":["seed-mongodb.js"],"names":["require","MongoClient","ObjectId","MONGODB_URI","process","env","seedDatabase","client","console","log","connect","db","collection","deleteMany","dropIndex","insertMany","_id","nombre","descripcion","categoria","mano_obra_fabricacion","mano_obra_instalacion","estado","createdAt","Date","updatedAt","tiposProductoResult","tiposProducto","Object","values","insertedIds","length","contacto","telefono","email","direccion","ciudad","pais","tipoMateriales","descuentoGeneral","proveedoresResult","proveedores","unidad","costo","stock","stockMinimo","proveedor_id","contribuyeMalla","variantes","tipo","costo_adicional","materialesResult","materiales","codigo","identificador","tipo_producto_id","user_id","imagen","svg","margen_ganancia","material_id","formula","error","close","main","module","exports"],"mappings":"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","sourcesContent":["const { MongoClient, ObjectId } = require(\"mongodb\")\n\nconst MONGODB_URI = process.env.MONGODB_URI || \"mongodb://localhost:27017/cotizacion\"\n\nasync function seedDatabase() {\n  const client = new MongoClient(MONGODB_URI)\n\n  try {\n    console.log(\"🔗 Conectando a MongoDB...\")\n    await client.connect()\n    console.log(\"✅ Conectado a MongoDB\")\n\n    const db = client.db()\n\n    // Limpiar colecciones existentes\n    console.log(\"🧹 Limpiando colecciones...\")\n    await db.collection(\"tiposproducto\").deleteMany({})\n    await db.collection(\"proveedores\").deleteMany({})\n    await db.collection(\"materiales\").deleteMany({})\n    await db.collection(\"productos\").deleteMany({})\n\n    // Eliminar índices problemáticos si existen\n    try {\n      await db.collection(\"productos\").dropIndex(\"codigo_1\")\n      console.log(\"🗑️ Índice codigo_1 eliminado\")\n    } catch (e) {\n      console.log(\"ℹ️ Índice codigo_1 no existía\")\n    }\n\n    // Seed Tipos de Producto\n    console.log(\"📦 Creando tipos de producto...\")\n    const tiposProductoResult = await db.collection(\"tiposproducto\").insertMany([\n      {\n        _id: new ObjectId(),\n        nombre: \"Ventana PVC\",\n        descripcion: \"Ventanas de PVC con diferentes configuraciones\",\n        categoria: \"ventanas\",\n        mano_obra_fabricacion: 150,\n        mano_obra_instalacion: 200,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Ventana Aluminio\",\n        descripcion: \"Ventanas de aluminio con diferentes configuraciones\",\n        categoria: \"ventanas\",\n        mano_obra_fabricacion: 180,\n        mano_obra_instalacion: 220,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Puerta PVC\",\n        descripcion: \"Puertas de PVC con diferentes configuraciones\",\n        categoria: \"puertas\",\n        mano_obra_fabricacion: 200,\n        mano_obra_instalacion: 300,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Barandal\",\n        descripcion: \"Barandales de diferentes materiales\",\n        categoria: \"barandales\",\n        mano_obra_fabricacion: 120,\n        mano_obra_instalacion: 180,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ])\n\n    const tiposProducto = Object.values(tiposProductoResult.insertedIds)\n    console.log(`✅ ${tiposProducto.length} tipos de producto creados`)\n\n    // Seed Proveedores\n    console.log(\"🏢 Creando proveedores...\")\n    const proveedoresResult = await db.collection(\"proveedores\").insertMany([\n      {\n        _id: new ObjectId(),\n        nombre: \"Proveedor PVC Premium\",\n        contacto: \"Juan Pérez\",\n        telefono: \"555-0101\",\n        email: \"juan@pvcpremium.com\",\n        direccion: \"Av. Industrial 123\",\n        ciudad: \"Ciudad de México\",\n        pais: \"México\",\n        tipoMateriales: [\"PVC\", \"Herrajes\"],\n        descuentoGeneral: 5,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Aluminio y Vidrios SA\",\n        contacto: \"María González\",\n        telefono: \"555-0202\",\n        email: \"maria@aluvid.com\",\n        direccion: \"Calle Aluminio 456\",\n        ciudad: \"Guadalajara\",\n        pais: \"México\",\n        tipoMateriales: [\"Aluminio\", \"Vidrio\"],\n        descuentoGeneral: 8,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Herrajes y Accesorios\",\n        contacto: \"Carlos Rodríguez\",\n        telefono: \"555-0303\",\n        email: \"carlos@herrajes.com\",\n        direccion: \"Zona Industrial 789\",\n        ciudad: \"Monterrey\",\n        pais: \"México\",\n        tipoMateriales: [\"Herrajes\", \"Accesorios\"],\n        descuentoGeneral: 3,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ])\n\n    const proveedores = Object.values(proveedoresResult.insertedIds)\n    console.log(`✅ ${proveedores.length} proveedores creados`)\n\n    // Seed Materiales\n    console.log(\"🔧 Creando materiales...\")\n    const materialesResult = await db.collection(\"materiales\").insertMany([\n      {\n        _id: new ObjectId(),\n        nombre: \"Perfil PVC Ventana\",\n        descripcion: \"Perfil principal para ventanas de PVC\",\n        categoria: \"PVC\",\n        unidad: \"ml\",\n        costo: 45.5,\n        stock: 1000,\n        stockMinimo: 100,\n        proveedor_id: proveedores[0],\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"color_pvc\", nombre: \"Blanco\", costo_adicional: 0 },\n          { tipo: \"color_pvc\", nombre: \"Café\", costo_adicional: 5 },\n          { tipo: \"color_pvc\", nombre: \"Negro\", costo_adicional: 8 },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Perfil Aluminio Ventana\",\n        descripcion: \"Perfil principal para ventanas de aluminio\",\n        categoria: \"Aluminio\",\n        unidad: \"ml\",\n        costo: 65.0,\n        stock: 800,\n        stockMinimo: 80,\n        proveedor_id: proveedores[1],\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"color_aluminio\", nombre: \"Natural\", costo_adicional: 0 },\n          { tipo: \"color_aluminio\", nombre: \"Bronce\", costo_adicional: 12 },\n          { tipo: \"color_aluminio\", nombre: \"Negro\", costo_adicional: 15 },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Vidrio Claro 6mm\",\n        descripcion: \"Vidrio transparente de 6mm de espesor\",\n        categoria: \"Vidrio\",\n        unidad: \"m2\",\n        costo: 180.0,\n        stock: 500,\n        stockMinimo: 50,\n        proveedor_id: proveedores[1],\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"tipo_vidrio\", nombre: \"Claro\", costo_adicional: 0 },\n          { tipo: \"tipo_vidrio\", nombre: \"Bronce\", costo_adicional: 25 },\n          { tipo: \"tipo_vidrio\", nombre: \"Azul\", costo_adicional: 30 },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Malla Mosquitera\",\n        descripcion: \"Malla para mosquiteros\",\n        categoria: \"Accesorios\",\n        unidad: \"m2\",\n        costo: 25.0,\n        stock: 200,\n        stockMinimo: 20,\n        proveedor_id: proveedores[2],\n        contribuyeMalla: true,\n        estado: true,\n        variantes: [\n          { tipo: \"otro\", nombre: \"Estándar\", costo_adicional: 0 },\n          { tipo: \"otro\", nombre: \"Reforzada\", costo_adicional: 8 },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ])\n\n    const materiales = Object.values(materialesResult.insertedIds)\n    console.log(`✅ ${materiales.length} materiales creados`)\n\n    // Seed Productos\n    console.log(\"🏗️ Creando productos...\")\n    await db.collection(\"productos\").insertMany([\n      {\n        _id: new ObjectId(),\n        nombre: \"Ventana PVC 2 Hojas\",\n        codigo: \"PROD-001\",\n        identificador: \"VEN-PVC-2H\",\n        descripcion: \"Ventana de PVC con 2 hojas corredizas\",\n        tipo_producto_id: tiposProducto[0],\n        user_id: new ObjectId(),\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        svg: '<rect width=\"100\" height=\"60\" fill=\"#e5e7eb\" stroke=\"#374151\" stroke-width=\"2\"/>',\n        proveedor_id: proveedores[0],\n        margen_ganancia: 35,\n        estado: true,\n        materiales: [\n          {\n            material_id: materiales[0],\n            formula: \"REDONDEAR.MENOS((ancho + alto) * 2 / 100, 0) * 100\",\n          },\n          {\n            material_id: materiales[2],\n            formula: \"REDONDEAR.MENOS(ancho * alto / 10000, 2)\",\n          },\n          {\n            material_id: materiales[3],\n            formula: \"SI(malla = 1, REDONDEAR.MENOS(ancho * alto / 10000, 2), 0)\",\n          },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Ventana Aluminio 3 Hojas\",\n        codigo: \"PROD-002\",\n        identificador: \"VEN-ALU-3H\",\n        descripcion: \"Ventana de aluminio con 3 hojas corredizas\",\n        tipo_producto_id: tiposProducto[1],\n        user_id: new ObjectId(),\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        svg: '<rect width=\"120\" height=\"60\" fill=\"#d1d5db\" stroke=\"#374151\" stroke-width=\"2\"/>',\n        proveedor_id: proveedores[1],\n        margen_ganancia: 40,\n        estado: true,\n        materiales: [\n          {\n            material_id: materiales[1],\n            formula: \"REDONDEAR.MENOS((ancho + alto) * 2.5 / 100, 0) * 100\",\n          },\n          {\n            material_id: materiales[2],\n            formula: \"REDONDEAR.MENOS(ancho * alto / 10000, 2)\",\n          },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ])\n\n    console.log(\"✅ 2 productos creados\")\n\n    console.log(\"🎉 ¡Base de datos inicializada correctamente!\")\n\n    // Mostrar resumen\n    console.log(\"\\n📊 RESUMEN:\")\n    console.log(`- Tipos de producto: ${tiposProducto.length}`)\n    console.log(`- Proveedores: ${proveedores.length}`)\n    console.log(`- Materiales: ${materiales.length}`)\n    console.log(\"- Productos: 2\")\n  } catch (error) {\n    console.error(\"❌ Error inicializando base de datos:\", error)\n  } finally {\n    await client.close()\n    console.log(\"🔌 Conexión cerrada\")\n  }\n}\n\n// Ejecutar si se llama directamente\nif (require.main === module) {\n  seedDatabase()\n}\n\nmodule.exports = { seedDatabase }\n"],"file":"seed-mongodb.dev.js"}