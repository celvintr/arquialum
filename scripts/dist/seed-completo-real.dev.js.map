{"version":3,"sources":["seed-completo-real.js"],"names":["mongoose","require","bcrypt","MONGODB_URI","process","env","seedDatabase","console","log","connect","proveedorSchema","Schema","nombre","String","contacto","telefono","email","direccion","ciudad","pais","tipoMateriales","descuentoGeneral","Number","estado","Boolean","timestamps","tipoProductoSchema","descripcion","categoria","mano_obra_fabricacion","mano_obra_instalacion","materialSchema","unidad","costo","stock","stockMinimo","proveedor_id","Types","ObjectId","contribuyeMalla","variantes","tipo","costo_adicional","productoSchema","codigo","identificador","tipo_producto_id","user_id","imagen","svg","margen_ganancia","materiales","material_id","formula","clienteSchema","grupoSchema","cotizacion_id","orden","cotizacionSchema","numero","cliente_id","subtotal","impuestos","total","fecha_vencimiento","Date","notas","cotizacionItemSchema","grupo_id","producto_id","cantidad","ancho","alto","malla","color_aluminio","color_pvc","tipo_vidrio","precio_unitario","reparacionSchema","precio_base","tiempo_estimado","userSchema","name","password","role","isActive","Proveedor","models","model","TipoProducto","Material","Producto","Cliente","Grupo","Cotizacion","CotizacionItem","Reparacion","User","deleteMany","hash","hashedPassword","insertMany","users","length","proveedores","tiposProducto","_id","productos","reparaciones","clientes","create","now","cotizacion","grupos","items","reduce","sum","item","updateOne","error","disconnect"],"mappings":"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","sourcesContent":["const mongoose = require(\"mongoose\")\nconst bcrypt = require(\"bcryptjs\")\n\n// Conectar a MongoDB\nconst MONGODB_URI = process.env.MONGODB_URI || \"mongodb://localhost:27017/cotizacion\"\n\nasync function seedDatabase() {\n  try {\n    console.log(\"🔗 Conectando a MongoDB...\")\n    await mongoose.connect(MONGODB_URI)\n    console.log(\"✅ Conectado a MongoDB\")\n\n    // Definir esquemas\n    const proveedorSchema = new mongoose.Schema(\n      {\n        nombre: String,\n        contacto: String,\n        telefono: String,\n        email: String,\n        direccion: String,\n        ciudad: String,\n        pais: String,\n        tipoMateriales: [String],\n        descuentoGeneral: Number,\n        estado: Boolean,\n      },\n      { timestamps: true },\n    )\n\n    const tipoProductoSchema = new mongoose.Schema(\n      {\n        nombre: String,\n        descripcion: String,\n        categoria: String,\n        mano_obra_fabricacion: Number,\n        mano_obra_instalacion: Number,\n        estado: Boolean,\n      },\n      { timestamps: true },\n    )\n\n    const materialSchema = new mongoose.Schema(\n      {\n        nombre: String,\n        descripcion: String,\n        categoria: String,\n        unidad: String,\n        costo: Number,\n        stock: Number,\n        stockMinimo: Number,\n        proveedor_id: mongoose.Schema.Types.ObjectId,\n        contribuyeMalla: Boolean,\n        estado: Boolean,\n        variantes: [\n          {\n            tipo: String,\n            nombre: String,\n            costo_adicional: Number,\n          },\n        ],\n      },\n      { timestamps: true },\n    )\n\n    const productoSchema = new mongoose.Schema(\n      {\n        nombre: String,\n        codigo: String,\n        identificador: String,\n        descripcion: String,\n        tipo_producto_id: mongoose.Schema.Types.ObjectId,\n        user_id: mongoose.Schema.Types.ObjectId,\n        imagen: String,\n        svg: String,\n        proveedor_id: mongoose.Schema.Types.ObjectId,\n        margen_ganancia: Number,\n        estado: Boolean,\n        materiales: [\n          {\n            material_id: mongoose.Schema.Types.ObjectId,\n            formula: String,\n          },\n        ],\n      },\n      { timestamps: true },\n    )\n\n    const clienteSchema = new mongoose.Schema(\n      {\n        nombre: String,\n        email: String,\n        telefono: String,\n        direccion: String,\n        ciudad: String,\n        estado: Boolean,\n      },\n      { timestamps: true },\n    )\n\n    const grupoSchema = new mongoose.Schema(\n      {\n        nombre: String,\n        descripcion: String,\n        cotizacion_id: mongoose.Schema.Types.ObjectId,\n        orden: Number,\n      },\n      { timestamps: true },\n    )\n\n    const cotizacionSchema = new mongoose.Schema(\n      {\n        numero: String,\n        cliente_id: mongoose.Schema.Types.ObjectId,\n        user_id: mongoose.Schema.Types.ObjectId,\n        subtotal: Number,\n        impuestos: Number,\n        total: Number,\n        estado: String,\n        fecha_vencimiento: Date,\n        notas: String,\n      },\n      { timestamps: true },\n    )\n\n    const cotizacionItemSchema = new mongoose.Schema(\n      {\n        cotizacion_id: mongoose.Schema.Types.ObjectId,\n        grupo_id: mongoose.Schema.Types.ObjectId,\n        tipo: String, // producto, vidrio_templado, reparacion, libre\n        producto_id: mongoose.Schema.Types.ObjectId,\n        descripcion: String,\n        cantidad: Number,\n        ancho: Number,\n        alto: Number,\n        malla: Boolean,\n        color_aluminio: String,\n        color_pvc: String,\n        tipo_vidrio: String,\n        precio_unitario: Number,\n        subtotal: Number,\n        imagen: String,\n        orden: Number,\n      },\n      { timestamps: true },\n    )\n\n    const reparacionSchema = new mongoose.Schema(\n      {\n        nombre: String,\n        descripcion: String,\n        categoria: String,\n        precio_base: Number,\n        tiempo_estimado: Number,\n        estado: Boolean,\n      },\n      { timestamps: true },\n    )\n\n    const userSchema = new mongoose.Schema(\n      {\n        name: String,\n        email: String,\n        password: String,\n        role: String,\n        isActive: Boolean,\n      },\n      { timestamps: true },\n    )\n\n    // Crear modelos\n    const Proveedor = mongoose.models.Proveedor || mongoose.model(\"Proveedor\", proveedorSchema)\n    const TipoProducto = mongoose.models.TipoProducto || mongoose.model(\"TipoProducto\", tipoProductoSchema)\n    const Material = mongoose.models.Material || mongoose.model(\"Material\", materialSchema)\n    const Producto = mongoose.models.Producto || mongoose.model(\"Producto\", productoSchema)\n    const Cliente = mongoose.models.Cliente || mongoose.model(\"Cliente\", clienteSchema)\n    const Grupo = mongoose.models.Grupo || mongoose.model(\"Grupo\", grupoSchema)\n    const Cotizacion = mongoose.models.Cotizacion || mongoose.model(\"Cotizacion\", cotizacionSchema)\n    const CotizacionItem = mongoose.models.CotizacionItem || mongoose.model(\"CotizacionItem\", cotizacionItemSchema)\n    const Reparacion = mongoose.models.Reparacion || mongoose.model(\"Reparacion\", reparacionSchema)\n    const User = mongoose.models.User || mongoose.model(\"User\", userSchema)\n\n    // Limpiar datos existentes\n    console.log(\"🧹 Limpiando datos existentes...\")\n    await Proveedor.deleteMany({})\n    await TipoProducto.deleteMany({})\n    await Material.deleteMany({})\n    await Producto.deleteMany({})\n    await Cliente.deleteMany({})\n    await Grupo.deleteMany({})\n    await Cotizacion.deleteMany({})\n    await CotizacionItem.deleteMany({})\n    await Reparacion.deleteMany({})\n    await User.deleteMany({})\n\n    // Crear usuarios\n    console.log(\"👤 Creando usuarios...\")\n    const hashedPassword = await bcrypt.hash(\"password\", 10)\n\n    const users = await User.insertMany([\n      {\n        name: \"Administrador\",\n        email: \"admin@test.com\",\n        password: hashedPassword,\n        role: \"admin\",\n        isActive: true,\n      },\n      {\n        name: \"Vendedor\",\n        email: \"vendedor@test.com\",\n        password: hashedPassword,\n        role: \"vendedor\",\n        isActive: true,\n      },\n    ])\n\n    console.log(`✅ ${users.length} usuarios creados`)\n\n    // Crear proveedores\n    console.log(\"🏢 Creando proveedores...\")\n    const proveedores = await Proveedor.insertMany([\n      {\n        nombre: \"Naufar\",\n        contacto: \"Juan Pérez\",\n        telefono: \"555-0001\",\n        email: \"contacto@naufar.com\",\n        direccion: \"Av. Industrial 123\",\n        ciudad: \"Guadalajara\",\n        pais: \"México\",\n        tipoMateriales: [\"aluminio\", \"vidrio\"],\n        descuentoGeneral: 5,\n        estado: true,\n      },\n      {\n        nombre: \"Vitro\",\n        contacto: \"María García\",\n        telefono: \"555-0002\",\n        email: \"ventas@vitro.com\",\n        direccion: \"Blvd. Cristal 456\",\n        ciudad: \"Monterrey\",\n        pais: \"México\",\n        tipoMateriales: [\"vidrio\", \"cristal\"],\n        descuentoGeneral: 3,\n        estado: true,\n      },\n      {\n        nombre: \"Herrajes SA\",\n        contacto: \"Carlos Rodríguez\",\n        telefono: \"555-0003\",\n        email: \"info@herrajessa.com\",\n        direccion: \"Calle Industria 789\",\n        ciudad: \"Ciudad de México\",\n        pais: \"México\",\n        tipoMateriales: [\"herrajes\", \"accesorios\"],\n        descuentoGeneral: 8,\n        estado: true,\n      },\n    ])\n\n    console.log(`✅ ${proveedores.length} proveedores creados`)\n\n    // Crear tipos de producto\n    console.log(\"📦 Creando tipos de producto...\")\n    const tiposProducto = await TipoProducto.insertMany([\n      {\n        nombre: \"Ventana PVC\",\n        descripcion: \"Ventanas de PVC con diferentes configuraciones\",\n        categoria: \"ventanas\",\n        mano_obra_fabricacion: 150,\n        mano_obra_instalacion: 200,\n        estado: true,\n      },\n      {\n        nombre: \"Ventana Aluminio\",\n        descripcion: \"Ventanas de aluminio con diferentes configuraciones\",\n        categoria: \"ventanas\",\n        mano_obra_fabricacion: 180,\n        mano_obra_instalacion: 220,\n        estado: true,\n      },\n      {\n        nombre: \"Puerta PVC\",\n        descripcion: \"Puertas de PVC con diferentes configuraciones\",\n        categoria: \"puertas\",\n        mano_obra_fabricacion: 200,\n        mano_obra_instalacion: 300,\n        estado: true,\n      },\n      {\n        nombre: \"Vidrio Templado\",\n        descripcion: \"Trabajos con vidrio templado como barandales y divisiones\",\n        categoria: \"vidrios_templados\",\n        mano_obra_fabricacion: 250,\n        mano_obra_instalacion: 350,\n        estado: true,\n      },\n    ])\n\n    console.log(`✅ ${tiposProducto.length} tipos de producto creados`)\n\n    // Crear materiales\n    console.log(\"🔧 Creando materiales...\")\n    const materiales = await Material.insertMany([\n      {\n        nombre: \"Perfil PVC Ventana\",\n        descripcion: \"Perfil principal para ventanas de PVC\",\n        categoria: \"PVC\",\n        unidad: \"ml\",\n        costo: 45.5,\n        stock: 1000,\n        stockMinimo: 100,\n        proveedor_id: proveedores[0]._id,\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"color_pvc\", nombre: \"Blanco\", costo_adicional: 0 },\n          { tipo: \"color_pvc\", nombre: \"Café\", costo_adicional: 5 },\n          { tipo: \"color_pvc\", nombre: \"Negro\", costo_adicional: 8 },\n        ],\n      },\n      {\n        nombre: \"Perfil Aluminio Ventana\",\n        descripcion: \"Perfil principal para ventanas de aluminio\",\n        categoria: \"Aluminio\",\n        unidad: \"ml\",\n        costo: 65.0,\n        stock: 800,\n        stockMinimo: 80,\n        proveedor_id: proveedores[1]._id,\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"color_aluminio\", nombre: \"Natural\", costo_adicional: 0 },\n          { tipo: \"color_aluminio\", nombre: \"Bronce\", costo_adicional: 12 },\n          { tipo: \"color_aluminio\", nombre: \"Negro\", costo_adicional: 15 },\n        ],\n      },\n      {\n        nombre: \"Vidrio Claro 6mm\",\n        descripcion: \"Vidrio transparente de 6mm de espesor\",\n        categoria: \"Vidrio\",\n        unidad: \"m2\",\n        costo: 180.0,\n        stock: 500,\n        stockMinimo: 50,\n        proveedor_id: proveedores[1]._id,\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"tipo_vidrio\", nombre: \"Claro\", costo_adicional: 0 },\n          { tipo: \"tipo_vidrio\", nombre: \"Bronce\", costo_adicional: 25 },\n          { tipo: \"tipo_vidrio\", nombre: \"Azul\", costo_adicional: 30 },\n        ],\n      },\n      {\n        nombre: \"Vidrio Templado 10mm\",\n        descripcion: \"Vidrio templado de 10mm para barandales\",\n        categoria: \"Vidrio Templado\",\n        unidad: \"m2\",\n        costo: 650.0,\n        stock: 200,\n        stockMinimo: 20,\n        proveedor_id: proveedores[1]._id,\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"tipo_vidrio\", nombre: \"Claro\", costo_adicional: 0 },\n          { tipo: \"tipo_vidrio\", nombre: \"Esmerilado\", costo_adicional: 120 },\n          { tipo: \"tipo_vidrio\", nombre: \"Satinado\", costo_adicional: 150 },\n        ],\n      },\n      {\n        nombre: \"Herraje para Barandal\",\n        descripcion: \"Kit de herrajes para barandal de vidrio templado\",\n        categoria: \"Herrajes\",\n        unidad: \"juego\",\n        costo: 850.0,\n        stock: 50,\n        stockMinimo: 5,\n        proveedor_id: proveedores[2]._id,\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"otro\", nombre: \"Acero Inoxidable\", costo_adicional: 0 },\n          { tipo: \"otro\", nombre: \"Cromado\", costo_adicional: 200 },\n        ],\n      },\n      {\n        nombre: \"Malla Mosquitera\",\n        descripcion: \"Malla para mosquiteros\",\n        categoria: \"Accesorios\",\n        unidad: \"m2\",\n        costo: 25.0,\n        stock: 200,\n        stockMinimo: 20,\n        proveedor_id: proveedores[2]._id,\n        contribuyeMalla: true,\n        estado: true,\n        variantes: [\n          { tipo: \"otro\", nombre: \"Estándar\", costo_adicional: 0 },\n          { tipo: \"otro\", nombre: \"Reforzada\", costo_adicional: 8 },\n        ],\n      },\n    ])\n\n    console.log(`✅ ${materiales.length} materiales creados`)\n\n    // Crear productos\n    console.log(\"🏗️ Creando productos...\")\n    const productos = await Producto.insertMany([\n      {\n        nombre: \"Ventana PVC 2 Hojas\",\n        codigo: \"PROD-001\",\n        identificador: \"VEN-PVC-2H\",\n        descripcion: \"Ventana de PVC con 2 hojas corredizas\",\n        tipo_producto_id: tiposProducto[0]._id,\n        user_id: users[0]._id,\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        svg: '<rect width=\"100\" height=\"60\" fill=\"#e5e7eb\" stroke=\"#374151\" stroke-width=\"2\"/>',\n        proveedor_id: proveedores[0]._id,\n        margen_ganancia: 35,\n        estado: true,\n        materiales: [\n          {\n            material_id: materiales[0]._id,\n            formula: \"REDONDEAR.MENOS((ancho + alto) * 2 / 100, 0) * 100\",\n          },\n          {\n            material_id: materiales[2]._id,\n            formula: \"REDONDEAR.MENOS(ancho * alto / 10000, 2)\",\n          },\n          {\n            material_id: materiales[5]._id,\n            formula: \"SI(malla = 1, REDONDEAR.MENOS(ancho * alto / 10000, 2), 0)\",\n          },\n        ],\n      },\n      {\n        nombre: \"Ventana Aluminio 3 Hojas\",\n        codigo: \"PROD-002\",\n        identificador: \"VEN-ALU-3H\",\n        descripcion: \"Ventana de aluminio con 3 hojas corredizas\",\n        tipo_producto_id: tiposProducto[1]._id,\n        user_id: users[0]._id,\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        svg: '<rect width=\"120\" height=\"60\" fill=\"#d1d5db\" stroke=\"#374151\" stroke-width=\"2\"/>',\n        proveedor_id: proveedores[1]._id,\n        margen_ganancia: 40,\n        estado: true,\n        materiales: [\n          {\n            material_id: materiales[1]._id,\n            formula: \"REDONDEAR.MENOS((ancho + alto) * 2.5 / 100, 0) * 100\",\n          },\n          {\n            material_id: materiales[2]._id,\n            formula: \"REDONDEAR.MENOS(ancho * alto / 10000, 2)\",\n          },\n        ],\n      },\n      {\n        nombre: \"Puerta PVC Sencilla\",\n        codigo: \"PROD-003\",\n        identificador: \"PTA-PVC-S\",\n        descripcion: \"Puerta de PVC sencilla con vidrio\",\n        tipo_producto_id: tiposProducto[2]._id,\n        user_id: users[0]._id,\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        svg: '<rect width=\"80\" height=\"200\" fill=\"#f3f4f6\" stroke=\"#374151\" stroke-width=\"2\"/>',\n        proveedor_id: proveedores[0]._id,\n        margen_ganancia: 45,\n        estado: true,\n        materiales: [\n          {\n            material_id: materiales[0]._id,\n            formula: \"REDONDEAR.MENOS((ancho + alto) * 2.2 / 100, 0) * 100\",\n          },\n          {\n            material_id: materiales[2]._id,\n            formula: \"REDONDEAR.MENOS(ancho * alto * 0.6 / 10000, 2)\",\n          },\n        ],\n      },\n      {\n        nombre: \"Barandal Vidrio Templado\",\n        codigo: \"PROD-004\",\n        identificador: \"BAR-VT\",\n        descripcion: \"Barandal de vidrio templado con herrajes\",\n        tipo_producto_id: tiposProducto[3]._id,\n        user_id: users[0]._id,\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        svg: '<rect width=\"150\" height=\"40\" fill=\"#d1fae5\" stroke=\"#374151\" stroke-width=\"2\"/>',\n        proveedor_id: proveedores[1]._id,\n        margen_ganancia: 50,\n        estado: true,\n        materiales: [\n          {\n            material_id: materiales[3]._id,\n            formula: \"REDONDEAR.MENOS(ancho * alto / 10000, 2)\",\n          },\n          {\n            material_id: materiales[4]._id,\n            formula: \"REDONDEAR.MENOS(ancho / 100, 0) + 1\",\n          },\n        ],\n      },\n    ])\n\n    console.log(`✅ ${productos.length} productos creados`)\n\n    // Crear reparaciones\n    console.log(\"🔨 Creando reparaciones...\")\n    const reparaciones = await Reparacion.insertMany([\n      {\n        nombre: \"Cambio de Vidrio\",\n        descripcion: \"Cambio de vidrio roto en ventana existente\",\n        categoria: \"Reparación Vidrios\",\n        precio_base: 350,\n        tiempo_estimado: 2,\n        estado: true,\n      },\n      {\n        nombre: \"Ajuste de Herrajes\",\n        descripcion: \"Ajuste y lubricación de herrajes en ventanas o puertas\",\n        categoria: \"Reparación Herrajes\",\n        precio_base: 180,\n        tiempo_estimado: 1,\n        estado: true,\n      },\n      {\n        nombre: \"Sellado de Filtraciones\",\n        descripcion: \"Sellado de filtraciones de agua en ventanas o puertas\",\n        categoria: \"Impermeabilización\",\n        precio_base: 250,\n        tiempo_estimado: 1.5,\n        estado: true,\n      },\n    ])\n\n    console.log(`✅ ${reparaciones.length} reparaciones creadas`)\n\n    // Crear clientes\n    console.log(\"👥 Creando clientes...\")\n    const clientes = await Cliente.insertMany([\n      {\n        nombre: \"Juan Pérez\",\n        email: \"juan@example.com\",\n        telefono: \"555-1234\",\n        direccion: \"Calle Principal 123\",\n        ciudad: \"Ciudad de México\",\n        estado: true,\n      },\n      {\n        nombre: \"Constructora Moderna SA\",\n        email: \"contacto@constructoramoderna.com\",\n        telefono: \"555-5678\",\n        direccion: \"Av. Reforma 456\",\n        ciudad: \"Guadalajara\",\n        estado: true,\n      },\n      {\n        nombre: \"María González\",\n        email: \"maria@example.com\",\n        telefono: \"555-9012\",\n        direccion: \"Blvd. Las Palmas 789\",\n        ciudad: \"Monterrey\",\n        estado: true,\n      },\n    ])\n\n    console.log(`✅ ${clientes.length} clientes creados`)\n\n    // Crear cotización de ejemplo\n    console.log(\"📝 Creando cotización de ejemplo...\")\n    const cotizacion = await Cotizacion.create({\n      numero: \"COT-2024-001\",\n      cliente_id: clientes[0]._id,\n      user_id: users[1]._id,\n      subtotal: 0,\n      impuestos: 0,\n      total: 0,\n      estado: \"borrador\",\n      fecha_vencimiento: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),\n      notas: \"Cotización de ejemplo con múltiples productos y grupos\",\n    })\n\n    // Crear grupos\n    console.log(\"📋 Creando grupos...\")\n    const grupos = await Grupo.insertMany([\n      {\n        nombre: \"Fachada Principal\",\n        descripcion: \"Elementos para la fachada principal\",\n        cotizacion_id: cotizacion._id,\n        orden: 1,\n      },\n      {\n        nombre: \"Interior Planta Baja\",\n        descripcion: \"Elementos para el interior de la planta baja\",\n        cotizacion_id: cotizacion._id,\n        orden: 2,\n      },\n    ])\n\n    console.log(`✅ ${grupos.length} grupos creados`)\n\n    // Crear items de cotización\n    console.log(\"📊 Creando items de cotización...\")\n    const items = await CotizacionItem.insertMany([\n      {\n        cotizacion_id: cotizacion._id,\n        grupo_id: grupos[0]._id,\n        tipo: \"producto\",\n        producto_id: productos[0]._id,\n        descripcion: \"Ventana PVC 2 Hojas 120x100cm\",\n        cantidad: 2,\n        ancho: 120,\n        alto: 100,\n        malla: true,\n        color_pvc: \"Blanco\",\n        precio_unitario: 3500,\n        subtotal: 7000,\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        orden: 1,\n      },\n      {\n        cotizacion_id: cotizacion._id,\n        grupo_id: grupos[0]._id,\n        tipo: \"producto\",\n        producto_id: productos[1]._id,\n        descripcion: \"Ventana Aluminio 3 Hojas 180x120cm\",\n        cantidad: 1,\n        ancho: 180,\n        alto: 120,\n        malla: false,\n        color_aluminio: \"Natural\",\n        precio_unitario: 4800,\n        subtotal: 4800,\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        orden: 2,\n      },\n      {\n        cotizacion_id: cotizacion._id,\n        grupo_id: grupos[1]._id,\n        tipo: \"producto\",\n        producto_id: productos[2]._id,\n        descripcion: \"Puerta PVC Sencilla 90x210cm\",\n        cantidad: 1,\n        ancho: 90,\n        alto: 210,\n        color_pvc: \"Café\",\n        precio_unitario: 6200,\n        subtotal: 6200,\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        orden: 1,\n      },\n      {\n        cotizacion_id: cotizacion._id,\n        grupo_id: grupos[1]._id,\n        tipo: \"vidrio_templado\",\n        descripcion: \"Barandal de Vidrio Templado 250x90cm\",\n        cantidad: 1,\n        ancho: 250,\n        alto: 90,\n        tipo_vidrio: \"Claro\",\n        precio_unitario: 8500,\n        subtotal: 8500,\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        orden: 2,\n      },\n      {\n        cotizacion_id: cotizacion._id,\n        grupo_id: grupos[1]._id,\n        tipo: \"reparacion\",\n        descripcion: \"Ajuste de Herrajes en ventanas existentes\",\n        cantidad: 3,\n        precio_unitario: 180,\n        subtotal: 540,\n        orden: 3,\n      },\n      {\n        cotizacion_id: cotizacion._id,\n        grupo_id: grupos[0]._id,\n        tipo: \"libre\",\n        descripcion: \"Instalación y materiales adicionales\",\n        cantidad: 1,\n        precio_unitario: 1200,\n        subtotal: 1200,\n        orden: 3,\n      },\n    ])\n\n    console.log(`✅ ${items.length} items de cotización creados`)\n\n    // Actualizar totales de la cotización\n    const subtotal = items.reduce((sum, item) => sum + item.subtotal, 0)\n    const impuestos = subtotal * 0.16\n    const total = subtotal + impuestos\n\n    await Cotizacion.updateOne(\n      { _id: cotizacion._id },\n      {\n        subtotal: subtotal,\n        impuestos: impuestos,\n        total: total,\n      },\n    )\n\n    console.log(\"✅ Totales de cotización actualizados\")\n\n    console.log(\"\\n🎉 ¡Datos de ejemplo creados exitosamente!\")\n    console.log(\"\\n📊 Resumen:\")\n    console.log(`- Usuarios: ${users.length}`)\n    console.log(`- Proveedores: ${proveedores.length}`)\n    console.log(`- Tipos de Producto: ${tiposProducto.length}`)\n    console.log(`- Materiales: ${materiales.length}`)\n    console.log(`- Productos: ${productos.length}`)\n    console.log(`- Reparaciones: ${reparaciones.length}`)\n    console.log(`- Clientes: ${clientes.length}`)\n    console.log(`- Grupos: ${grupos.length}`)\n    console.log(`- Items de Cotización: ${items.length}`)\n    console.log(\"\\n🔑 Credenciales de acceso:\")\n    console.log(\"- Admin: admin@test.com / password\")\n    console.log(\"- Vendedor: vendedor@test.com / password\")\n  } catch (error) {\n    console.error(\"❌ Error:\", error)\n  } finally {\n    // Cerrar conexión\n    await mongoose.disconnect()\n    console.log(\"🔌 Conexión cerrada\")\n  }\n}\n\n// Ejecutar la función\nseedDatabase()\n"],"file":"seed-completo-real.dev.js"}