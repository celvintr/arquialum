{"version":3,"sources":["seed-mongodb.js"],"names":["require","MongoClient","ObjectId","MONGODB_URI","env","seedDatabase","client","db","tiposProductoResult","tiposProducto","proveedoresResult","proveedores","materialesResult","materiales","regeneratorRuntime","async","_context","prev","next","console","awrap","connect","log","deleteMany","collection","dropIndex","t0","insertMany","_id","nombre","descripcion","categoria","mano_obra_fabricacion","mano_obra_instalacion","estado","createdAt","Date","updatedAt","sent","Object","values","insertedIds","concat","length","email","direccion","pais","tipoMateriales","contacto","telefono","ciudad","descuentoGeneral","tipo","costo_adicional","unidad","costo","stock","stockMinimo","proveedor_id","contribuyeMalla","variantes","svg","formula","tipo_producto_id","margen_ganancia","material_id","t1","finish","stop","identificador","imagen"],"mappings":"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","file":"seed-mongodb.min.js","sourcesContent":["const { MongoClient, ObjectId } = require(\"mongodb\")\n\nconst MONGODB_URI = process.env.MONGODB_URI || \"mongodb://localhost:27017/cotizacion\"\n\nasync function seedDatabase() {\n  const client = new MongoClient(MONGODB_URI)\n\n  try {\n    console.log(\"üîó Conectando a MongoDB...\")\n    await client.connect()\n    console.log(\"‚úÖ Conectado a MongoDB\")\n\n    const db = client.db()\n\n    // Limpiar colecciones existentes\n    console.log(\"üßπ Limpiando colecciones...\")\n    await db.collection(\"tiposproducto\").deleteMany({})\n    await db.collection(\"proveedores\").deleteMany({})\n    await db.collection(\"materiales\").deleteMany({})\n    await db.collection(\"productos\").deleteMany({})\n\n    // Eliminar √≠ndices problem√°ticos si existen\n    try {\n      await db.collection(\"productos\").dropIndex(\"codigo_1\")\n      console.log(\"üóëÔ∏è √çndice codigo_1 eliminado\")\n    } catch (e) {\n      console.log(\"‚ÑπÔ∏è √çndice codigo_1 no exist√≠a\")\n    }\n\n    // Seed Tipos de Producto\n    console.log(\"üì¶ Creando tipos de producto...\")\n    const tiposProductoResult = await db.collection(\"tiposproducto\").insertMany([\n      {\n        _id: new ObjectId(),\n        nombre: \"Ventana PVC\",\n        descripcion: \"Ventanas de PVC con diferentes configuraciones\",\n        categoria: \"ventanas\",\n        mano_obra_fabricacion: 150,\n        mano_obra_instalacion: 200,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Ventana Aluminio\",\n        descripcion: \"Ventanas de aluminio con diferentes configuraciones\",\n        categoria: \"ventanas\",\n        mano_obra_fabricacion: 180,\n        mano_obra_instalacion: 220,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Puerta PVC\",\n        descripcion: \"Puertas de PVC con diferentes configuraciones\",\n        categoria: \"puertas\",\n        mano_obra_fabricacion: 200,\n        mano_obra_instalacion: 300,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Barandal\",\n        descripcion: \"Barandales de diferentes materiales\",\n        categoria: \"barandales\",\n        mano_obra_fabricacion: 120,\n        mano_obra_instalacion: 180,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ])\n\n    const tiposProducto = Object.values(tiposProductoResult.insertedIds)\n    console.log(`‚úÖ ${tiposProducto.length} tipos de producto creados`)\n\n    // Seed Proveedores\n    console.log(\"üè¢ Creando proveedores...\")\n    const proveedoresResult = await db.collection(\"proveedores\").insertMany([\n      {\n        _id: new ObjectId(),\n        nombre: \"Proveedor PVC Premium\",\n        contacto: \"Juan P√©rez\",\n        telefono: \"555-0101\",\n        email: \"juan@pvcpremium.com\",\n        direccion: \"Av. Industrial 123\",\n        ciudad: \"Ciudad de M√©xico\",\n        pais: \"M√©xico\",\n        tipoMateriales: [\"PVC\", \"Herrajes\"],\n        descuentoGeneral: 5,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Aluminio y Vidrios SA\",\n        contacto: \"Mar√≠a Gonz√°lez\",\n        telefono: \"555-0202\",\n        email: \"maria@aluvid.com\",\n        direccion: \"Calle Aluminio 456\",\n        ciudad: \"Guadalajara\",\n        pais: \"M√©xico\",\n        tipoMateriales: [\"Aluminio\", \"Vidrio\"],\n        descuentoGeneral: 8,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Herrajes y Accesorios\",\n        contacto: \"Carlos Rodr√≠guez\",\n        telefono: \"555-0303\",\n        email: \"carlos@herrajes.com\",\n        direccion: \"Zona Industrial 789\",\n        ciudad: \"Monterrey\",\n        pais: \"M√©xico\",\n        tipoMateriales: [\"Herrajes\", \"Accesorios\"],\n        descuentoGeneral: 3,\n        estado: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ])\n\n    const proveedores = Object.values(proveedoresResult.insertedIds)\n    console.log(`‚úÖ ${proveedores.length} proveedores creados`)\n\n    // Seed Materiales\n    console.log(\"üîß Creando materiales...\")\n    const materialesResult = await db.collection(\"materiales\").insertMany([\n      {\n        _id: new ObjectId(),\n        nombre: \"Perfil PVC Ventana\",\n        descripcion: \"Perfil principal para ventanas de PVC\",\n        categoria: \"PVC\",\n        unidad: \"ml\",\n        costo: 45.5,\n        stock: 1000,\n        stockMinimo: 100,\n        proveedor_id: proveedores[0],\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"color_pvc\", nombre: \"Blanco\", costo_adicional: 0 },\n          { tipo: \"color_pvc\", nombre: \"Caf√©\", costo_adicional: 5 },\n          { tipo: \"color_pvc\", nombre: \"Negro\", costo_adicional: 8 },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Perfil Aluminio Ventana\",\n        descripcion: \"Perfil principal para ventanas de aluminio\",\n        categoria: \"Aluminio\",\n        unidad: \"ml\",\n        costo: 65.0,\n        stock: 800,\n        stockMinimo: 80,\n        proveedor_id: proveedores[1],\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"color_aluminio\", nombre: \"Natural\", costo_adicional: 0 },\n          { tipo: \"color_aluminio\", nombre: \"Bronce\", costo_adicional: 12 },\n          { tipo: \"color_aluminio\", nombre: \"Negro\", costo_adicional: 15 },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Vidrio Claro 6mm\",\n        descripcion: \"Vidrio transparente de 6mm de espesor\",\n        categoria: \"Vidrio\",\n        unidad: \"m2\",\n        costo: 180.0,\n        stock: 500,\n        stockMinimo: 50,\n        proveedor_id: proveedores[1],\n        contribuyeMalla: false,\n        estado: true,\n        variantes: [\n          { tipo: \"tipo_vidrio\", nombre: \"Claro\", costo_adicional: 0 },\n          { tipo: \"tipo_vidrio\", nombre: \"Bronce\", costo_adicional: 25 },\n          { tipo: \"tipo_vidrio\", nombre: \"Azul\", costo_adicional: 30 },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Malla Mosquitera\",\n        descripcion: \"Malla para mosquiteros\",\n        categoria: \"Accesorios\",\n        unidad: \"m2\",\n        costo: 25.0,\n        stock: 200,\n        stockMinimo: 20,\n        proveedor_id: proveedores[2],\n        contribuyeMalla: true,\n        estado: true,\n        variantes: [\n          { tipo: \"otro\", nombre: \"Est√°ndar\", costo_adicional: 0 },\n          { tipo: \"otro\", nombre: \"Reforzada\", costo_adicional: 8 },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ])\n\n    const materiales = Object.values(materialesResult.insertedIds)\n    console.log(`‚úÖ ${materiales.length} materiales creados`)\n\n    // Seed Productos\n    console.log(\"üèóÔ∏è Creando productos...\")\n    await db.collection(\"productos\").insertMany([\n      {\n        _id: new ObjectId(),\n        nombre: \"Ventana PVC 2 Hojas\",\n        codigo: \"PROD-001\",\n        identificador: \"VEN-PVC-2H\",\n        descripcion: \"Ventana de PVC con 2 hojas corredizas\",\n        tipo_producto_id: tiposProducto[0],\n        user_id: new ObjectId(),\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        svg: '<rect width=\"100\" height=\"60\" fill=\"#e5e7eb\" stroke=\"#374151\" stroke-width=\"2\"/>',\n        proveedor_id: proveedores[0],\n        margen_ganancia: 35,\n        estado: true,\n        materiales: [\n          {\n            material_id: materiales[0],\n            formula: \"REDONDEAR.MENOS((ancho + alto) * 2 / 100, 0) * 100\",\n          },\n          {\n            material_id: materiales[2],\n            formula: \"REDONDEAR.MENOS(ancho * alto / 10000, 2)\",\n          },\n          {\n            material_id: materiales[3],\n            formula: \"SI(malla = 1, REDONDEAR.MENOS(ancho * alto / 10000, 2), 0)\",\n          },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        _id: new ObjectId(),\n        nombre: \"Ventana Aluminio 3 Hojas\",\n        codigo: \"PROD-002\",\n        identificador: \"VEN-ALU-3H\",\n        descripcion: \"Ventana de aluminio con 3 hojas corredizas\",\n        tipo_producto_id: tiposProducto[1],\n        user_id: new ObjectId(),\n        imagen: \"/placeholder.svg?height=200&width=200\",\n        svg: '<rect width=\"120\" height=\"60\" fill=\"#d1d5db\" stroke=\"#374151\" stroke-width=\"2\"/>',\n        proveedor_id: proveedores[1],\n        margen_ganancia: 40,\n        estado: true,\n        materiales: [\n          {\n            material_id: materiales[1],\n            formula: \"REDONDEAR.MENOS((ancho + alto) * 2.5 / 100, 0) * 100\",\n          },\n          {\n            material_id: materiales[2],\n            formula: \"REDONDEAR.MENOS(ancho * alto / 10000, 2)\",\n          },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ])\n\n    console.log(\"‚úÖ 2 productos creados\")\n\n    console.log(\"üéâ ¬°Base de datos inicializada correctamente!\")\n\n    // Mostrar resumen\n    console.log(\"\\nüìä RESUMEN:\")\n    console.log(`- Tipos de producto: ${tiposProducto.length}`)\n    console.log(`- Proveedores: ${proveedores.length}`)\n    console.log(`- Materiales: ${materiales.length}`)\n    console.log(\"- Productos: 2\")\n  } catch (error) {\n    console.error(\"‚ùå Error inicializando base de datos:\", error)\n  } finally {\n    await client.close()\n    console.log(\"üîå Conexi√≥n cerrada\")\n  }\n}\n\n// Ejecutar si se llama directamente\nif (require.main === module) {\n  seedDatabase()\n}\n\nmodule.exports = { seedDatabase }\n"]}